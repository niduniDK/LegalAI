# ===========================================
# LegalAI Backend Environment Variables
# ===========================================

# Database Configuration (Supabase PostgreSQL)
# Use connection pooler for production (better performance)
DATABASE_URL=postgresql://postgres....:...@....pooler.supabase.com:6543/postgres
POSTGRES_HOST=....pooler.supabase.com
POSTGRES_USER=...
POSTGRES_PASSWORD=...

POSTGRES_PORT=6543
POSTGRES_DB=postgres
POSTGRES_SSL=require

# Alternative Supabase connection strings (comment/uncomment as needed)
# Direct connection:
# DATABASE_URL=postgresql://postgres:...@db.....supabase.co:5432/postgres
# Session pooler:
# DATABASE_URL=postgresql://postgres....:...@....pooler.supabase.com:5432/postgres

# JWT Configuration
JWT_SECRET_KEY=...  # <-----
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Email Configuration (for verification and password reset)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=...
SMTP_PASSWORD=...
SMTP_FROM_EMAIL=...
SMTP_FROM_NAME=LegalAI Support

# Security
PASSWORD_HASH_ALGORITHM=bcrypt
PASSWORD_HASH_ROUNDS=12

# API Keys
GEMINI_API_KEY=...  # <-----
GOOGLE_API_KEY=...  # Same Key
OPENAI_API_KEY=...  # OpenAI API Key

# LLM Configuration
# Supported models: gemini, openai
LLM_PROVIDER=gemini
# Model names:
# - For Gemini: gemini-2.0-flash, gemini-2.0-flash-exp, gemini-1.5-pro, etc.
# - For OpenAI: gpt-4o, gpt-4-turbo, gpt-3.5-turbo, etc.
LLM_MODEL=gemini-2.0-flash-exp

# Application Settings
APP_NAME=LegalAI
ENVIRONMENT=development

# ALLOWED_ORIGINS = Comma-separated list of allowed CORS origins
# For local development (default):
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000

# For Railway production deployment:
# ALLOWED_ORIGINS=https://your-app.vercel.app,http://localhost:3000,http://localhost:3001
# ENVIRONMENT=production

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_REQUESTS_PER_HOUR=1000

# Session Settings
SESSION_COOKIE_SECURE=false
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=lax

# For production (Railway), set: SESSION_COOKIE_SECURE=true

# LangSmith API Key (Optional - for observability)
# Get from: https://smith.langchain.com/settings
LANGSMITH_API_KEY=
LANGSMITH_PROJECT=legalai-backend
LANGSMITH_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_TRACING_V2=true

# ===========================================
# Deployment Instructions
# ===========================================

# LOCAL DEVELOPMENT:
# 1. Copy this file to .env
# 2. Fill in all required values (marked with ... or <-----)
# 3. Use localhost URLs for APP_URL and API_URL
# 4. Run: python main.py

# RAILWAY PRODUCTION DEPLOYMENT:
# 1. Push code to GitHub with proper folder structure:
#    Backend/data/indices/  (FAISS, BM25, TSV files)
#    Backend/data/models/   (Legal-BERT model)
# 2. Create Railway project from GitHub repo
# 3. Set Root Directory: Backend
# 4. Create Railway Volume: Mount to /app/data (1GB)
# 5. Set ALL environment variables in Railway dashboard
# 6. Railway auto-generates domain and sets $PORT - you don't need to configure these
# 7. Update these variables for production:
#    - ALLOWED_ORIGINS=https://your-app.vercel.app,https://custom-domain.com
#    - ENVIRONMENT=production
#    - SESSION_COOKIE_SECURE=true
# 8. Deploy! Railway auto-deploys on git push
# 9. Copy Railway domain (e.g., your-app.up.railway.app) for frontend .env

# VERCEL FRONTEND SETUP:
# After deploying backend to Railway, update frontend:
# - Set NEXT_PUBLIC_API_URL in Vercel to your Railway backend URL
# - See frontend/.env.example for details

# IMPORTANT:
# - Legal-BERT model must be in Backend/data/models/legal-bert-base-uncased/
# - All indices must be in Backend/data/indices/
# - Railway Volume automatically copies data on first deployment
# - Use strong random secrets for JWT_SECRET_KEY in production
# - For Gmail SMTP, use App Password, not regular password
